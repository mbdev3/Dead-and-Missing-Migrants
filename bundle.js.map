{"version":3,"file":"bundle.js","sources":["Data/useWorldAtlas.js","Data/useData.js","BubbleMap/Marks.js","BubbleMap/index.js","DateHistogram/Marks.js","DateHistogram/axisBottom.js","DateHistogram/axisLeft.js","DateHistogram/index.js","index.js"],"sourcesContent":["import  { useState, useEffect } from \"react\";\nimport { json } from \"d3\";\nimport { feature, mesh } from \"topojson\";\n\nconst jsonUrl = \"https://unpkg.com/world-atlas@2.0.2/countries-50m.json\";\n\nexport const useWorldAtlas = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    json(jsonUrl).then((topology) => {\n      const { countries, land } = topology.objects;\n      setData({\n        land: feature(topology, land),\n        interiors: mesh(topology, countries, (a, b) => a !== b),\n      });\n    });\n  }, []);\n\n  return data;\n};\n","import { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\n\nconst csvUrl =\n  \"https://gist.githubusercontent.com/curran/a9656d711a8ad31d812b8f9963ac441c/raw/267eac8b97d161c479d950ffad3ddd5ce2d1f370/MissingMigrants-Global-2019-10-08T09-47-14-subset.csv\";\n\nconst row = (d) => {\n  d.coords = d[\"Location Coordinates\"]\n    .split(\",\")\n    .map((d) => +d)\n    .reverse();\n  d[\"Total Dead and Missing\"] = +d[\"Total Dead and Missing\"];\n\n  d[\"Reported Date\"] = new Date(d[\"Reported Date\"]);\n  return d;\n};\n\nexport const useData = () => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    csv(csvUrl, row).then(setData);\n  }, []);\n\n  return data;\n};\n","import { geoNaturalEarth1, geoPath, geoGraticule } from \"d3\";\nimport { useMemo } from \"react\";\nconst projection = geoNaturalEarth1();\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\nexport const Marks = ({ worldAtlas: { land, interiors }, data, sizeScale, sizeValue }) => (\n  <g className=\"marks-map\">\n    {useMemo(\n      () => (\n        <>\n          <path className=\"sphere\" d={path({ type: \"Sphere\" })} />\n          <path className=\"graticules\" d={path(graticule())} />\n          {land.features.map((feature) => (\n            <path className=\"land\" d={path(feature)} />\n          ))}\n          <path className=\"interiors\" d={path(interiors)} />\n        </>\n      ),\n      [path, graticule, land, interiors]\n    )}\n    {data.map((d) => {\n      const [x, y] = projection(d.coords);\n      // console.log(projection(d.coords))\n      return (\n        <circle cx={x} cy={y} r={sizeScale(sizeValue(d))}>\n          <title>{\"missing migrants : \" + d[\"Total Dead and Missing\"]}</title>\n        </circle>\n      );\n    })}\n  </g>\n);\n","import React, { useMemo } from \"react\";\nimport { Marks } from \"./Marks\";\nimport { scaleSqrt, max } from \"d3\";\n\nconst sizeValue = (d) => d[\"Total Dead and Missing\"];\nconst maxRadius = 15;\nexport const BubbleMap = ({ data, worldAtlas, filteredData }) => {\n  const sizeScale = useMemo(\n    () =>\n      scaleSqrt()\n        .domain([0, max(data, sizeValue)])\n        .range([0, maxRadius]),\n    [data, sizeValue, maxRadius]\n  );\n\n  return (\n    <Marks className=\"world\" worldAtlas={worldAtlas} data={filteredData} sizeScale={sizeScale} sizeValue={sizeValue} />\n  );\n};\n","import { line, curveNatural } from \"d3\";\nexport const Marks = ({ binnedData, yScale, xScale, xValue, yValue, innerHeight, tooltip }) => (\n  <g className=\"marks-bar\">\n    <path\n      fill=\"none\"\n      stroke=\"black\"\n      d={line()\n        .x((d) => xScale(xValue(d)))\n        .y((d) => yScale(yValue(d)))\n        .curve(curveNatural)(binnedData)}\n    />\n    {binnedData.map((d) => (\n      <rect x={xScale(d.x0)} y={yScale(d.y)} width={xScale(d.x1) - xScale(d.x0)} height={innerHeight - yScale(d.y)}>\n        <title>{tooltip(d.y)}</title>\n      </rect>\n    ))}\n  </g>\n);\n","export const AxisBottom = ({ xScale, height, tickFormat }) =>\n  xScale.ticks().map((tickValue) => (\n    <g className=\"tick\" key={tickValue} transform={`translate(${xScale(tickValue)},0)`}>\n      <line y2={height - 5} />\n      <text style={{ textAnchor: \"middle\" }} y={height - 30}>\n        {tickFormat(tickValue)}\n      </text>\n    </g>\n  ));\n","export const AxisLeft = ({ yScale, width }) =>\n  yScale.ticks().map((tickValue) => (\n    <g\n      className=\"tick\"\n      transform={`translate(0,${yScale(\n        tickValue\n      )})`}\n    >\n      <line x2={width} /> //y1=\n      {yScale(tickValue)} y2={yScale(tickValue)}\n      <text\n        key={tickValue}\n        style={{ textAnchor: 'end' }}\n        x={-5}\n        dy=\".32em\"\n      >\n        {tickValue}\n      </text>\n    </g>\n  ));\n","import React, { useEffect, useRef, useMemo } from \"react\";\n\nimport { scaleLinear, max, extent, scaleTime, timeFormat, bin, timeMonths, sum, brushX, select } from \"d3\";\nimport { Marks } from \"./Marks\";\nimport { AxisBottom } from \"./axisBottom\";\nimport { AxisLeft } from \"./axisLeft\";\n\nconst margin = {\n  top: 0,\n  bottom: 50,\n  right: 0,\n  left: 70,\n};\nconst xAxisTickFormat = timeFormat(\"%m/%Y\");\nconst xAxisLabel = \"Date\";\n\nconst yValue = (d) => d[\"Total Dead and Missing\"];\nconst yAxisLabel = \"Total Dead and Missing\";\n\nexport const DateHistogram = ({ data, height, width, setBrushExtent, xValue }) => {\n  const brushRef = useRef();\n\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.right - margin.left;\n\n  const xScale = useMemo(\n    () => scaleTime().domain(extent(data, xValue)).range([0, innerWidth]),\n    [data, xValue, innerWidth]\n  );\n\n  const binnedData = useMemo(() => {\n    const [start, stop] = xScale.domain();\n\n    return bin()\n      .value(xValue)\n      .domain(xScale.domain())\n      .thresholds(timeMonths(start, stop))(data)\n      .map((array) => ({\n        y: sum(array, yValue),\n        x0: array.x0,\n        x1: array.x1,\n      }));\n  }, [xValue, xScale, data, yValue]);\n  const yScale = useMemo(() => {\n    // console.log(\"test\")\n    return scaleLinear()\n      .domain([0, max(binnedData, (d) => d.y)])\n      .range([innerHeight, 0])\n      .nice();\n  }, [binnedData, innerHeight]);\n  useEffect(() => {\n    const brush = brushX().extent([\n      [0, 0],\n      [innerWidth, innerHeight],\n    ]);\n    brush(select(brushRef.current));\n    brush.on(\"brush end\", (e) => {\n      setBrushExtent(e.selection && e.selection.map(xScale.invert));\n    });\n  }, [innerWidth, innerHeight]);\n  return (\n    <>\n      <rect width={width} height={height} fill=\"none\" />\n      <g transform={`translate(${margin.left},${margin.top})`}>\n        <line y2={innerHeight} />\n        <line y2={innerHeight + 1} y1={innerHeight + 1} x2={innerWidth} />\n        <AxisBottom height={height} xScale={xScale} tickFormat={xAxisTickFormat} />\n        <AxisLeft yScale={yScale} width={width} />\n        <text className=\"label\" textAnchor=\"middle\" x={innerWidth / 2} y={height}>\n          {\" \"}\n          {xAxisLabel}\n        </text>\n        <text className=\"label\" textAnchor=\"middle\" transform={`translate(${-50},${innerHeight / 2}) rotate(-90)`}>\n          {yAxisLabel}\n        </text>\n        <Marks\n          fill=\"#ececec\"\n          binnedData={binnedData}\n          xScale={xScale}\n          yScale={yScale}\n          xValue={xValue}\n          yValue={yValue}\n          innerHeight={innerHeight}\n          tooltip={(d) => d}\n        />\n        <g ref={brushRef} />\n      </g>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useWorldAtlas } from \"./Data/useWorldAtlas\";\nimport { useData } from \"./Data/useData\";\n\nimport { scaleSqrt, max } from \"d3\";\nimport { BubbleMap } from \"./BubbleMap/index\";\nimport { DateHistogram } from \"./DateHistogram/index\";\nconst width = 960;\nconst height = 540;\nconst DateHistogramSize = 0.4;\nconst xValue = (d) => d[\"Reported Date\"];\nconst App = () => {\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState();\n  // console.log(brushExtent)\n  if (!worldAtlas || !data) {\n    return <pre>Loading...</pre>;\n  }\n  const filteredData = brushExtent\n    ? data.filter((d) => {\n        const date = xValue(d);\n        return date > brushExtent[0] && date < brushExtent[1];\n      })\n    : data;\n  return (\n    <>\n      <div id=\"title\">\n        <h1>Dead and Missing Migrants [2014-2020]</h1>\n      </div>\n      <svg width={width} height={height}>\n        <BubbleMap data={data} worldAtlas={worldAtlas} filteredData={filteredData} />\n        <g transform={`translate(0,${height - DateHistogramSize * height})`}>\n          <DateHistogram\n            data={data}\n            height={DateHistogramSize * height}\n            width={width}\n            setBrushExtent={setBrushExtent}\n            xValue={xValue}\n          />\n        </g>\n        <g className=\"copyright\" transform={`translate(${width - 35},${height - 25}) `}>\n          <text textAnchor=\"middle\" dx={-15} dy={18}>\n            By\n          </text>\n          <a xlink:href=\"https://thembdev.com\">\n            {\" \"}\n            <image xlink:href=\"https://mbdev-utils.s3.eu-west-3.amazonaws.com/mbdev_logo_sm.svg\" width={25} />\n          </a>\n        </g>\n      </svg>\n    </>\n  );\n};\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"names":["const","useState","useEffect","json","feature","mesh","csv","geoNaturalEarth1","geoPath","geoGraticule","Marks","useMemo","scaleSqrt","max","React","line","curveNatural","timeFormat","useRef","scaleTime","extent","bin","timeMonths","sum","scaleLinear","brushX","select","ReactDOM"],"mappings":"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"}